{"version":3,"sources":["auth.js","components/bars/topAppBar.js","layouts/Menu.js","layouts/Footer.js","locale/ru/user.js","locale/ru/comment.js","locale/ru/room.js","locale/ru/index.js","layouts/PrivateMainLayout.js","layouts/PublicMainLayout.js","components/bars/topAppBarSecond.js","components/bars/topStick.js","components/views/viewSet.js","components/views/swipeItems.js","components/views/gridItems.js","components/views/listItems.js","components/views/rawItems.js","components/views/tableItems.js","components/views/superTableItems.js","components/views/viewItems.js","components/views/dialogFullScreen.js","components/views/dialogPromt.js","components/hasMany/queryItems.js","components/hasMany/createMany.js","queries/users.js","pages/users/_form.js","pages/users/_fields1.js","pages/users/edit.js","pages/users/create.js","pages/users/all.js","pages/users/signinDialog.js","pages/users/signupDialog.js","components/authArea.js","pages/users/profile.js","queries/comments.js","pages/comments/_form.js","pages/comments/_fields1.js","pages/comments/edit.js","pages/comments/create.js","pages/comments/all.js","queries/rooms.js","pages/rooms/_form.js","pages/rooms/_fields1.js","pages/rooms/edit.js","pages/rooms/create.js","pages/rooms/all.js","App.js","ApolloProvider.js","serviceWorker.js","index.js"],"names":["initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","useStyles","makeStyles","theme","appbar","position","top","spacing","left","zIndex","backgroundColor","width","TopAppBar","classes","React","useState","scroll","setScroll","useEffect","handleScroll","scrollCheck","window","scrollY","document","addEventListener","removeEventListener","Paper","square","elevation","className","children","stickToBottom","bottom","Layout","useContext","history","useHistory","useTheme","is_mobile","useMediaQuery","breakpoints","up","location","pathname","setValue","Fragment","Toolbar","id","Button","color","onClick","push","startIcon","menu","Main","Users","Rooms","Typography","style","flexGrow","variant","noWrap","Profile","SignIn","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","Footer","component","rest","render","Container","Grid","container","direction","justify","alignItems","item","align","getFullYear","main","AppName","footer","Copyrights","Phone","AppTel","Link","href","target","rel","Person","Terms","filelds","Id","Username","Email","Password","text","name","cover","ruRU","Tel","profile","SignOut","SignUp","SignInHeader","SignUpHeader","UserNotFound","ConfirmPassword","components","New","Add","Edit","Delete","Choose","Yes","No","Upload","Change","Join","models","comment","room","Component","to","TopAppBarSecond","mobile_top","pc_top","console","log","mobile","desktop","TopStick","wizard","display","flexDirection","marginBottom","fab","right","ViewSet","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","viewType","Stepper","alternativeLabel","labels","map","Step","StepLabel","ButtonGroup","aria-label","disabled","tabs","length","Tabs","_","tab","indicatorColor","textColor","Tab","xs","sm","md","step","index","marginTop","pointer","cursor","swipeItems","padding","media","height","minWidth","SwipeItems","TableContainer","Table","size","TableBody","TableRow","items","editable","editButton","deletable","deleteButton","TableCell","Card","handleEditDialogOpen","elementContent","CardActions","disableSpacing","cardActions","handleDeleteDialogOpen","deleteButtonName","cardCollapse","GridItems","ListItems","List","dense","ListItem","button","ListItemSecondaryAction","IconButton","Divider","light","RawItems","TableItems","TableHead","headers","header","editButtonName","options","filter","filterType","selectableRows","fixedHeader","responsive","rowsPerPageOptions","rowsPerPage","sortOrder","SuperTableItems","concat","empty","sort","viewColumns","customBodyRender","find","indexOf","title","data","columns","ViewItems","superTableOptions","TransitionNew","forwardRef","ref","Slide","TransitionEdit","DialogFullScreen","Dialog","fullScreen","open","onClose","TransitionComponent","isNew","edge","dialogName","content","DialogPromt","DialogTitle","DialogActions","onYes","autoFocus","yes","no","QueryItems","useQuery","query_where","variables","query_variables","error","loading","Object","keys","undefined","hidden","CreateMany","parent_url","split","deleteDialog","setDeleteDialog","openEdit","setOpenEdit","openCreate","setOpenCreate","currentItem","setCurrentItem","handleAddButton","actionType","handleCreateDialogOpen","handleCreate","withUrl","handleEditDialogClose","handleCreateDialogClose","handleUpdate","e","updateMutation","then","res","ids","update","proxy","newItem","refetchQueries","query","locationArr","useMutation","query_delete","deleteMutation","query_update","addButtonType","Fab","addButtonName","fullWidth","CreateForm","afterSubmit","EditForm","i","GETS","gql","UPDATE","DELETE","LOGIN_USER","REGISTER_USER","FieldsSchema","Yup","shape","username","min","max","required","email","password","Form","initialValues","enableReinitialize","validationSchema","onSubmit","values","actions","setSubmitting","EditView1","TextField","margin","errors","touched","helperText","onBlur","handleChange","submitForm","onDelete","Create","isSubmitting","All","sortThirdClickReset","sortDescFirst","SignupSchema","SignInDialog","context","enqueueSnackbar","useSnackbar","onError","loginUser","maxWidth","CssBaseline","handleSubmit","autoComplete","handleBlur","LinearProgress","confirmPassword","oneOf","SignUpDialog","register","graphQLErrors","message","regUser","admin","AuthArea","publicArea","privateArea","view","setView","reg","setReg","preventDefault","AppBar","Avatar","gutterBottom","MODEL","FIELDS","FIELDS_MUTATION","f","replace","FRAGMENT_FIELDS","join","GETS_WHERE","like","owner","Array","isArray","forEach","__typename","comments","ListItemText","primary","secondary","createMuiTheme","palette","blue","pink","overrides","MUIDataTable","paper","boxShadow","border","App","ThemeProvider","maxSnack","exact","path","Menu","PrivateMainLayout","PublicMainLayout","Comments","httpLink","createUploadLink","uri","process","authLink","setContext","Authorization","client","ApolloClient","link","cache","InMemoryCache","Boolean","hostname","match","ReactDOM","ApolloProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fa617993.chunk.js","sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nconst initialState = {\n  user: null\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  login: (userData) => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: 'LOGOUT' });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ user: state.user, login, logout }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };\n","/*\n    Example:\n    <TopAppBar></TopAppBar>\n */\nimport React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    appbar: {\n        position: 'sticky',\n        top: theme.spacing(0),\n        left: theme.spacing(0),\n        zIndex: 1000,\n        backgroundColor: theme.backgroundColor,\n        width: '100%'\n\n    },\n\n}));\n\nexport default function TopAppBar(props) {\n\n    const classes = useStyles();\n\n    const [scroll, setScroll] = React.useState(false);\n    React.useEffect(() => {\n        const handleScroll = () => {\n            const scrollCheck = window.scrollY > 0;\n            if (scrollCheck !== scroll) setScroll(scrollCheck);\n        }\n        document.addEventListener(\"scroll\", handleScroll)\n        return () => document.removeEventListener(\"scroll\", handleScroll);\n    }, [scroll]);\n    \n    return (\n        <Paper square elevation={scroll ? 2: 0} className={classes.appbar} >\n            { props.children }\n        </Paper >\n    )\n}","import React, { useContext } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../auth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Toolbar, Typography, Button,\n    BottomNavigation, BottomNavigationAction,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport TopAppBar from '../components/bars/topAppBar';\nimport PeopleIcon from '@material-ui/icons/People';\n\n\nconst useStyles = makeStyles((theme) => ({\n    stickToBottom: {\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n        zIndex: 1000,\n    },\n}));\n\n\nconst Layout = (props) => {\n    const { user } = useContext(AuthContext);\n    const classes = useStyles();\n    let history = useHistory();\n    const theme = useTheme();\n    const is_mobile = useMediaQuery(theme.breakpoints.up('sm'));\n    const [value, setValue] = React.useState(props.location.pathname);\n\n    return (\n        <React.Fragment>\n            {is_mobile ?\n                <TopAppBar position=\"sticky\">\n                    <Toolbar id=\"menu\">\n\n                        <Button color=\"inherit\" onClick={() => history.push('/')} startIcon={<HomeIcon />}>{theme.props.menu.Main}</Button>\n                        <Button color=\"inherit\" onClick={() => history.push('/users')} startIcon={<PeopleIcon />}>{theme.props.menu.Users}</Button>\n                        <Button color=\"inherit\" onClick={() => history.push('/rooms')} startIcon={<PeopleIcon />}>{theme.props.menu.Rooms}</Button>\n                        <Typography style={{ flexGrow: 1 }} variant=\"h5\" noWrap />\n                        {user ?\n                            <Button color=\"inherit\" onClick={() => history.push('/profile')} startIcon={<AccountCircleIcon />} >{theme.props.menu.Profile}</Button>\n                            :\n                            <Button color=\"inherit\" onClick={() => history.push('/profile')} startIcon={<AccountCircleIcon />} >{theme.props.menu.SignIn}</Button>\n                        }\n                    </Toolbar>\n                </TopAppBar>\n                :\n                <BottomNavigation\n                    className={classes.stickToBottom}\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        history.push(newValue)\n                    }}\n                    showLabels\n                >\n                    <BottomNavigationAction value='/' label={theme.props.menu.Main} icon={<HomeIcon />} />\n                    <BottomNavigationAction value='/users' label={theme.props.menu.Users} icon={<PeopleIcon />} />\n                    <BottomNavigationAction value='/rooms' label={theme.props.menu.Rooms} icon={<PeopleIcon />} />\n                    {user ?\n                        <BottomNavigationAction value='/profile' label={theme.props.menu.Profile} icon={<AccountCircleIcon />} />\n                        :\n                        <BottomNavigationAction value='/profile' label={theme.props.menu.SignIn} icon={<AccountCircleIcon />} />\n                    }\n                </BottomNavigation>\n            }\n        </React.Fragment>\n    );\n};\nexport default Layout;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Typography, Grid, Link, Container } from '@material-ui/core';\n\n\nconst Footer = ({ component: Component, ...rest }) => {\n\n    const theme = useTheme();\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                <Container>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing={2}\n                    >\n                        <Grid item >\n                            <Typography variant=\"subtitle2\" align=\"center\" color=\"textSecondary\" component=\"p\">© {new Date().getFullYear()} {theme.props.main.AppName}. {theme.props.footer.Copyrights}.</Typography>\n                        </Grid>\n                        <Grid item >\n                            <Typography variant=\"subtitle2\" align=\"center\" color=\"textSecondary\" component=\"p\">· {theme.props.footer.Phone}.: {theme.props.main.AppTel}</Typography>\n                        </Grid>\n                        <Grid item >\n                            <Link href='/person.pdf' target=\"_blank\" rel=\"noopener\" variant=\"subtitle2\" align=\"center\" color=\"textSecondary\">· {theme.props.footer.Person}</Link>\n                        </Grid>\n                        <Grid item >\n                            <Link href='/terms.pdf' target=\"_blank\" rel=\"noopener\" variant=\"subtitle2\" align=\"center\" color=\"textSecondary\">· {theme.props.footer.Terms}</Link>\n                        </Grid>\n                        <Grid item ><br /><br /></Grid>\n                    </Grid>\n                </Container>\n            }\n        />\n    );\n};\nexport default Footer;","const filelds = {\n    Id: \"ID\",\n    Username: \"Логин\",\n    Email: \"Email\",\n    Password: \"Пароль\",\n}\nexport default filelds","const filelds = {\n    text: \"text\",\n}\nexport default filelds","const filelds = {\n    name: \"name\",\n    cover: \"cover\",\n}\nexport default filelds","import user from './user';\n//top for generator\nimport comment from './comment';\nimport room from './room';\n\nconst ruRU = {\n  props: {\n    main: {\n      AppName: \"New App\",\n      AppTel: \"+7 (900) 000-00-00\",\n\n    },\n    menu: {\n      Main: \"Главная\",\n      Users: \"Пользователи\",\n      Rooms: \"Комнаты\",\n      Profile: \"Профиль\",\n      SignIn: \"Войти\",\n    },\n    footer: {\n      Copyrights: \"Все права защищены\",\n      Phone: \"Тел\",\n      Tel: \"Тел\",\n      Person: \"Конфиденциальность\",\n      Terms: \"Условия\",\n    },\n    profile: {\n      SignIn: \"Войти\",\n      SignOut: \"Выйти\",\n      SignUp: \"Зарегистрироваться\",\n      SignInHeader: \"Вход\",\n      SignUpHeader: \"Регистрирация\",\n      UserNotFound: \"Пользователь не найден\",\n      ConfirmPassword: \"Повторите пароль\",\n    },\n    components: {\n      New: \"Новый\",\n      Add: \"Добавить\",\n      Edit: \"Редактироовать\",\n      Delete: \"Удалить\",\n      Choose: \"Выбрать\",\n      Yes: \"Да\",\n      No: \"Нет\",\n      Upload: \"Загрузить\",\n      Change: \"Изменить\",\n      Join: \"Присоединиться\"\n    },\n    models: {\n      // models for generator\n\t\t\tcomment : { ...comment },\n\t\t\troom : { ...room },\n\t\t\tuser: { ...user },\n    }\n  }\n};\nexport default ruRU;","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../auth';\n\nconst Layout = ({ component: Component, ...rest }) => {\n    const { user } = useContext(AuthContext);\n\n    return (\n        <Route\n            {...rest}\n            render={(props) => !user ?\n                <Redirect to=\"/\" />\n                :\n                <React.Fragment>\n                    <Component {...props} />\n                </React.Fragment>\n            }\n        />\n    );\n};\nexport default Layout;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst Layout = ({ component: Component, ...rest }) => {\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                <React.Fragment>\n                    <Component {...props} />\n                </React.Fragment>\n            }\n        />\n    );\n};\nexport default Layout;","/*\n    Example:\n    <TopAppBarSecond></TopAppBarSecond>\n */\nimport React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles((theme) => ({\n    appbar: {\n        position: 'sticky',\n        left: theme.spacing(0),\n        zIndex: 1000,\n        backgroundColor: theme.backgroundColor,\n        width: '100%'\n\n    },\n\n}));\n\nexport default function TopAppBarSecond(props) {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const is_mobile = !useMediaQuery(theme.breakpoints.up('sm'));\n    const mobile_top = theme.spacing(7);\n    const pc_top = theme.spacing(8);\n\n    console.log(is_mobile);\n    \n    return (\n        <Paper square elevation={2} style={{top: is_mobile ? mobile_top : pc_top}} className={classes.appbar} >\n            { props.children }\n        </Paper >\n    )\n}","/*\n    Example:\n    <TopStick></TopStick>\n */\nimport React, { useState, useEffect } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    mobile: {\n        position: 'sticky',\n        top: '-4px',\n        left: theme.spacing(0),\n        zIndex: 1000,\n        backgroundColor: theme.backgroundColor,\n        width: '100%'\n    },\n    desktop: {\n        position: 'sticky',\n        top: '60px',\n        left: theme.spacing(0),\n        zIndex: 1000,\n        backgroundColor: theme.backgroundColor,\n        width: '100%'\n    },\n\n}));\n\nexport default function TopStick(props) {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const is_mobile = !useMediaQuery(theme.breakpoints.up('sm'));\n\n    const [scroll, setScroll] = useState(false);\n    useEffect(() => {\n        const handleScroll = () => {\n            const scrollCheck = window.scrollY > 0;\n            if (scrollCheck !== scroll) setScroll(scrollCheck);\n        }\n        document.addEventListener(\"scroll\", handleScroll)\n        return () => document.removeEventListener(\"scroll\", handleScroll);\n    }, [scroll]);\n\n    return (\n        <Paper square elevation={scroll ? 2: 0} className = { is_mobile? classes.mobile : classes.desktop } >\n            { props.children }\n        </Paper >\n    )\n}","/*\n    Example:\n\n    <ViewSet\n        viewType='wizard' // can be - tabs tabsmain wisardmain plan wizard or raw\n        labels={['1','2','3']}\n        tabs={['1content','2content','3content']}\n    />\n\n */\n\nimport React from 'react';\nimport {\n    Stepper, Step, StepLabel, Button, ButtonGroup,\n    Tabs, Tab, Grid, Container,\n} from '@material-ui/core';\nimport TopAppBarSecond from '../bars/topAppBarSecond';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TopStick from '../bars/topStick';\n\n\nconst useStyles = makeStyles((theme) => ({\n    wizard: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginBottom: theme.spacing(1),\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(9),\n        right: theme.spacing(3),\n        zIndex: 1000,\n    },\n}));\n\n\n\nexport default function ViewSet(props) {\n\n    const classes = useStyles();\n\n    const [activeStep, setActiveStep] = React.useState(0);\n\n    const handleNext = () => { setActiveStep(prevActiveStep => prevActiveStep + 1); };\n    const handleBack = () => { setActiveStep(prevActiveStep => prevActiveStep - 1); };\n\n    return <React.Fragment>\n        {\n            props.viewType === 'wizard' &&\n            <TopAppBarSecond>\n                <div className={classes.wizard}>\n                    <Stepper activeStep={activeStep} alternativeLabel>\n                        {props.labels.map((label) => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button disabled={activeStep === 0} onClick={handleBack} >Назад</Button>\n                        <Button disabled={activeStep === props.tabs.length - 1} color=\"primary\" onClick={handleNext} id=\"next\">След.</Button>\n                    </ButtonGroup>\n                </div>\n            </TopAppBarSecond>\n        }\n        {\n            props.viewType === 'wizardmain' &&\n            <TopStick>\n                <div className={classes.wizard}>\n                    <Stepper activeStep={activeStep} alternativeLabel>\n                        {props.labels.map((label) => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button disabled={activeStep === 0} onClick={handleBack} >Назад</Button>\n                        <Button disabled={activeStep === props.tabs.length - 1} color=\"primary\" onClick={handleNext} id=\"next\">След.</Button>\n                    </ButtonGroup>\n                </div>\n            </TopStick>\n        }\n        {\n            props.viewType === 'tabs' &&\n            <TopAppBarSecond>\n                <Tabs\n                    value={activeStep}\n                    onChange={(_, tab) => setActiveStep(tab)}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    {props.labels.map((label) => (\n                        <Tab key={label} label={label} />\n                    ))}\n                </Tabs>\n            </TopAppBarSecond>\n        }\n        {\n            props.viewType === 'tabsmain' &&\n            <TopStick>\n                <Tabs\n                    value={activeStep}\n                    onChange={(_, tab) => setActiveStep(tab)}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    {props.labels.map((label) => (\n                        <Tab key={label} label={label} />\n                    ))}\n                </Tabs>\n            </TopStick>\n        }\n        {props.viewType === 'plan' && <React.Fragment>\n            <TopStick>\n                <Container>\n                    <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item xs={12} sm={12} md={12}></Grid>\n                        <Grid item xs={12} sm={12} md={12}>\n                            {props.labels.map(label => <div key={label}>{label}</div>)}\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={12}></Grid>\n                    </Grid>\n                </Container>\n            </TopStick>\n        </React.Fragment>\n        }\n        {props.viewType === 'raw' && <React.Fragment>\n            {props.labels.map(label => <div key={label}>{label}</div>)}\n        </React.Fragment>\n        }\n        {\n            props.tabs.map((step, index) => (activeStep === index) && <div style={{ marginTop: '15px' }} key={index}>{step}</div>)\n        }\n\n    </React.Fragment>;\n}","/*\n    Example:\n    \n */\nimport React from 'react';\nimport {\n    TableRow, Card, CardActions, TableContainer, Table, TableBody,\n    Button,\n    TableCell,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    pointer: {\n        cursor: 'pointer'\n    },\n    swipeItems: {\n        padding: '5px'\n    },\n    media: {\n        height: 100,\n        minWidth: 120\n    },\n}));\n\n\nexport default function SwipeItems(props) {\n    const classes = useStyles();\n\n    return <TableContainer>\n        <Table name={`${props.name}-list`} aria-label=\"table\" size=\"small\">\n            <TableBody>\n                <TableRow>\n                    {props.items && props.items.map((item, index) => {\n                        const editable = ((props.editButton(item, index) === 'each') || (props.editButton(item, index) === 'last' && (index === 0)) || (props.editButton(item, index) === true));\n                        const deletable = ((props.deleteButton(item, index) === 'each') || (props.deleteButton(item, index) === 'last' && (index === 0)) || (props.deleteButton(item, index) === true));\n\n                        return <TableCell key={index} className={classes.swipeItems}>\n                            <Card variant=\"outlined\"\n                                className={editable ? classes.pointer : ''}\n                            >\n                                <div onClick={() => { if (editable) props.handleEditDialogOpen(item) }}  >\n                                    {\n                                        props.elementContent && props.elementContent(item, index)\n                                    }\n                                </div>\n                                <CardActions disableSpacing>\n                                    {props.cardActions && props.cardActions(item, index)}\n                                    {deletable &&\n                                        <Button\n                                            aria-label=\"delete\"\n                                            color=\"secondary\"\n                                            size=\"small\"\n                                            className={`delete-${props.name}`}\n                                            onClick={() => props.handleDeleteDialogOpen(item)}\n                                        >\n                                            {props.deleteButtonName}\n                                        </Button>\n                                    }\n                                </CardActions>\n                                <React.Fragment>\n                                    {props.cardCollapse && props.cardCollapse(item, index)}\n                                </React.Fragment>\n                            </Card>\n                        </TableCell>;\n                    })\n                    }\n                </TableRow>\n            </TableBody>\n        </Table>\n    </TableContainer>\n}","/*\n    Example:\n    \n */\nimport React from 'react';\nimport {\n    Grid, Card, CardActions,\n    Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    pointer: {\n        cursor: 'pointer'\n    },\n}));\n\n\nexport default function GridItems(props) {\n    const classes = useStyles();\n\n    return <Grid name={`${props.name}-list`} container spacing={3} justify=\"center\" alignItems=\"center\">\n        {props.items && props.items.map((item, index) => {\n            const editable = ((props.editButton(item, index) === 'each') || (props.editButton(item, index) === 'last' && (index === 0)) || (props.editButton(item, index) === true));\n            const deletable = ((props.deleteButton(item, index) === 'each') || (props.deleteButton(item, index) === 'last' && (index === 0)) || (props.deleteButton(item, index) === true));\n\n            return <Grid key={index} item xs={12} sm={6} md={4} >\n\n                <Card variant=\"outlined\"\n                    className={editable ? classes.pointer : ''}\n                >\n                    <div\n                        onClick={() => { if (editable) props.handleEditDialogOpen(item) }}\n                    >\n                        {\n                            props.elementContent && props.elementContent(item, index)\n                        }\n                    </div>\n                    {\n                        (((props.cardActions && props.cardActions(item, index)) !== null) || deletable === true) && <CardActions disableSpacing>\n                            {props.cardActions(item, index)}\n                            {deletable &&\n                                <Button\n                                    aria-label=\"delete\"\n                                    color=\"secondary\"\n                                    size=\"small\"\n                                    className={`delete-${props.name}`}\n                                    onClick={() => props.handleDeleteDialogOpen(item)}\n                                >\n                                    {props.deleteButtonName}\n                                </Button>\n                            }\n                        </CardActions>\n                    }\n                    <React.Fragment>\n                        {props.cardCollapse && props.cardCollapse(item, index)}\n                    </React.Fragment>\n                </Card>\n            </Grid>;\n        })\n        }\n    </Grid>\n}","/*\n    Example:\n    \n */\nimport React from 'react';\nimport { List, ListItem, ListItemSecondaryAction, IconButton, Divider } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nexport default function ListItems(props) {\n    return <List name={`${props.name}-list`} dense={false} >\n        {\n            props.items && props.items.map((item, index) => {\n\n                const editable = ((props.editButton(item, index) === 'each') || (props.editButton(item, index) === 'last' && (index === 0)) || (props.editButton(item, index) === true));\n                const deletable = ((props.deleteButton(item, index) === 'each') || (props.deleteButton(item, index) === 'last' && (index === 0)) || (props.deleteButton(item, index) === true));\n\n                return <React.Fragment key={index} >\n                    <ListItem\n                        button={editable}\n                        onClick={() => {\n                            if (editable) props.handleEditDialogOpen(item);\n                        }}\n                    >\n                        {\n                            props.elementContent && props.elementContent(item, index)\n                        }\n                        <ListItemSecondaryAction>\n                            {deletable &&\n                                <IconButton\n                                    color='secondary'\n                                    aria-label=\"delete\"\n                                    className={`delete-${props.name}`}\n                                    onClick={() => props.handleDeleteDialogOpen(item)}\n                                >\n                                    <DeleteIcon />\n                                </IconButton>\n                            }\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider light />\n                </React.Fragment>\n            })\n        }\n    </List>\n}","/*\n    Example:\n    \n */\nimport React from 'react';\n\nexport default function RawItems(props) {\n    return <React.Fragment>\n        {\n            props.items && props.items.map((item, index) => <React.Fragment key={index}>\n                {\n                    props.elementContent(item, index)\n                }\n            </React.Fragment>\n            )\n        }\n    </React.Fragment>\n}","/*\n    Example:\n    \n */\nimport React from 'react';\nimport {\n    TableContainer, TableCell, TableRow, TableHead, Table, Paper, TableBody,\n    Button,\n} from '@material-ui/core';\n\nexport default function TableItems(props) {\n\n    return <TableContainer component={Paper}>\n        <Table name={`${props.name}-list`} aria-label=\"table\" size=\"small\">\n            <TableHead>\n                <TableRow>\n                    {props.headers.map((header, index) =>\n                        <TableCell key={index} >{header.label}</TableCell>\n                    )}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {props.items.map((item, index) =>  {\n\n                    const editable = ((props.editButton(item, index) === 'each') || (props.editButton(item, index) === 'last' && (index === 0)) || (props.editButton(item, index) === true));\n                    const deletable = ((props.deleteButton(item, index) === 'each') || (props.deleteButton(item, index) === 'last' && (index === 0)) || (props.deleteButton(item, index) === true));\n\n                    return <TableRow key={index}>\n                        {\n                            props.elementContent && props.elementContent(item, index)\n                        }\n                        <TableCell>\n                            {editable &&\n                                <Button\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    className={`edit-${props.name}`}\n                                    onClick={() => props.handleEditDialogOpen(item)}\n                                >\n                                    {props.editButtonName}\n                                </Button>\n                            }\n                        </TableCell>\n                        <TableCell>\n                            {deletable &&\n                                <Button\n                                    aria-label=\"delete\"\n                                    color=\"secondary\"\n                                    size=\"small\"\n                                    className={`delete-${props.name}`}\n                                    onClick={() => props.handleDeleteDialogOpen(item)}\n                                >\n                                    {props.deleteButtonName}\n                                </Button>\n                            }\n                        </TableCell>\n                </TableRow>\n                })}\n            </TableBody>\n        </Table>\n    </TableContainer>;\n}","/*\n    Example:\n    \n */\nimport React from 'react';\nimport MUIDataTable from \"mui-datatables\";\nimport { Button } from '@material-ui/core';\n\nconst options = {\n    filter: true,\n    filterType: \"dropdown\",\n    selectableRows: 'none',\n    fixedHeader: true,\n    responsive: 'simple',\n    rowsPerPageOptions: [10, 50, 100, 1000],\n    rowsPerPage: 50,\n    sortOrder: {\n        name: 'floors',\n        direction: 'asc'\n    }\n\n};\n\n\nexport default function SuperTableItems(props) {\n\n    const headers = props.headers.concat([\n        {\n            name: \"id\",\n            label: ' ',\n            options: {\n                empty: true,\n                sort: false,\n                viewColumns: false,\n                filter: false,\n                customBodyRender: id => {\n                    let item = props.items.find(item => item.id === id);\n                    let index = props.items.indexOf(item);\n\n                    const editable = ((props.editButton(item, index) === 'each') || (props.editButton(item, index) === 'last' && (index === 0)) || (props.editButton(item, index) === true));\n\n                    return editable && <Button\n                        color=\"primary\"\n                        size=\"small\"\n                        className={`edit-${props.name}`}\n                        onClick={() => {\n                            props.handleEditDialogOpen(item);\n                        }} >\n                        {props.editButtonName}\n                    </Button>\n                }\n            }\n        },\n        {\n            name: \"id\",\n            label: ' ',\n            options: {\n                empty: true,\n                sort: false,\n                filter: false,\n                viewColumns: false,\n                customBodyRender: id => {\n\n                    let item = props.items.find(item => item.id === id);\n                    let index = props.items.indexOf(item);\n                    const deletable = ((props.deleteButton(item, item.id) === 'each') || (props.deleteButton(item, index) === 'last' && (index === 0)) || (props.deleteButton(item, index) === true));\n\n                    return deletable && <Button\n                        aria-label=\"delete\"\n                        color=\"secondary\"\n                        size=\"small\"\n                        className={`delete-${props.name}`}\n                        onClick={() => {\n                            props.handleDeleteDialogOpen(item)\n                        }} >\n                        {props.deleteButtonName}\n                    </Button>\n                }\n            }\n        }\n    ]);\n\n\n    return <MUIDataTable\n        title={''}\n        data={props.items.map((item, index) => props.elementContent(item, index))}\n        columns={headers}\n        options={options}\n    />;\n}","/*\n    Example:\n\n    <QueryItems\n        name={'post'}\n        type={'grid'} // grid, list, table, supertable, raw\n        renderSkeleton={(item, index) => <div>loading</div> }\n        renderItem={(item, index) => <div>{item.name}</div> }\n    />\n    \n */\nimport React from 'react';\nimport SwipeItems from './swipeItems'\nimport GridItems from './gridItems'\nimport ListItems from './listItems'\nimport RawItems from './rawItems'\nimport TableItems from './tableItems'\nimport SuperTableItems from './superTableItems'\n\n\nexport default function ViewItems(props) {\n\n    if (props.viewType === 'swipe') {\n        return <SwipeItems\n            name={props.name}\n            items={props.items}\n            editButton={props.editButton}\n            deleteButton={props.deleteButton}\n            elementContent={props.elementContent}\n            cardActions={props.cardActions}\n            cardCollapse={props.cardCollapse}\n            editButtonName={props.editButtonName}\n            deleteButtonName={props.deleteButtonName}\n            handleEditDialogOpen={props.handleEditDialogOpen}\n            handleDeleteDialogOpen={props.handleDeleteDialogOpen}\n        />;\n    }\n\n    if (props.viewType === 'grid') {\n        return <GridItems\n            name={props.name}\n            items={props.items}\n            editButton={props.editButton}\n            deleteButton={props.deleteButton}\n            elementContent={props.elementContent}\n            cardActions={props.cardActions}\n            cardCollapse={props.cardCollapse}\n            editButtonName={props.editButtonName}\n            deleteButtonName={props.deleteButtonName}\n            handleEditDialogOpen={props.handleEditDialogOpen}\n            handleDeleteDialogOpen={props.handleDeleteDialogOpen}\n        />;\n    }\n\n    if (props.viewType === 'table') {\n        return <TableItems\n            name={props.name}\n            headers={props.headers}\n            items={props.items}\n            editButton={props.editButton}\n            deleteButton={props.deleteButton}\n            elementContent={props.elementContent}\n            editButtonName={props.editButtonName}\n            deleteButtonName={props.deleteButtonName}\n            handleEditDialogOpen={props.handleEditDialogOpen}\n            handleDeleteDialogOpen={props.handleDeleteDialogOpen}\n        />;\n    }\n    if (props.viewType === 'list') {\n        return <ListItems\n            name={props.name}\n            items={props.items}\n            editButton={props.editButton}\n            deleteButton={props.deleteButton}\n            elementContent={props.elementContent}\n            deleteButtonName={props.deleteButtonName}\n            handleEditDialogOpen={props.handleEditDialogOpen}\n            handleDeleteDialogOpen={props.handleDeleteDialogOpen}\n        />;\n    }\n\n    if (props.viewType === 'supertable') {\n        return <SuperTableItems\n            superTableOptions={props.superTableOptions}\n            name={props.name}\n            headers={props.headers}\n            items={props.items}\n            editButton={props.editButton}\n            deleteButton={props.deleteButton}\n            editButtonName={props.editButtonName}\n            deleteButtonName={props.deleteButtonName}\n            elementContent={props.elementContent}\n            handleEditDialogOpen={props.handleEditDialogOpen}\n            handleDeleteDialogOpen={props.handleDeleteDialogOpen}\n        />;\n    }\n\n    return <RawItems\n        name={props.name}\n        items={props.items}\n        elementContent={props.elementContent}\n    />;\n\n}","/*\n    Example:\n    \n */\nimport React from 'react';\nimport {\n    Dialog, Toolbar, IconButton, Typography, Slide\n} from '@material-ui/core';\nimport TopAppBar from '../bars/topAppBar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nconst TransitionNew = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst TransitionEdit = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport default function DialogFullScreen(props) {\n    return <Dialog fullScreen open={props.open}\n        onClose={props.onClose}\n        TransitionComponent={props.isNew ? TransitionNew : TransitionEdit}\n    >\n        <TopAppBar position=\"sticky\" >\n            <Toolbar>\n                <IconButton edge=\"start\" aria-label=\"back\" color=\"inherit\" onClick={props.onClose}>\n                    {props.isNew ? <CloseIcon /> : <ArrowBack />}\n                </IconButton>\n                {\n                    props.dialogName &&\n                    <Typography noWrap variant=\"h6\">{props.dialogName}</Typography>\n                }\n            </Toolbar>\n        </TopAppBar>\n        {props.content}\n    </Dialog>\n}","/*\n    Example:\n    \n */\nimport React from 'react';\nimport {\n    Dialog, DialogTitle, DialogActions, Button\n} from '@material-ui/core';\n\nexport default function DialogPromt(props) {\n    return <Dialog open={props.open} onClose={props.onClose}>\n        <DialogTitle id=\"alert-delele\">{props.dialogName && props.dialogName}</DialogTitle>\n        <DialogActions>\n            <Button onClick={props.onYes} color=\"primary\" autoFocus>{props.yes}</Button>\n            <Button onClick={props.onClose} color=\"primary\">{props.no}</Button>\n        </DialogActions>\n    </Dialog>\n}","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\n\nexport default function QueryItems(props) {\n\n    const { error, data, loading } = useQuery(props.query_where, {\n        variables: props.query_variables,\n        /*pollInterval: 7000*/\n    });\n    if (loading) { return null; }\n    if (error) { console.log(error); return null; }\n    let items = data ? data[Object.keys(data)[0]] : [];\n    if (props.hidden !== undefined) items = items.filter(props.hidden);\n\n    return <React.Fragment>\n        {props.children({ ...props, items: items })}\n    </React.Fragment>;\n}","\n/*\n    Example:\n\nimport CreateMany from '../../components/hasMany/createMany';\n\n<CreateMany\n                        name={models}\n                        viewType='supertable' // can be grid list table supertable swipe raw\n                        superTableOptions={superTableOptions}\n                        query_where={GETS_WHERE}\n                        query_variables={{ ids: props.values.members }}\n                        query_update={UPDATE}\n                        query_delete={DELETE}\n                        onChange={e => { props.handleChange(e); props.submitForm(); }}\n                        withUrl={false} // use url\n                        EditForm={(Edit)}\n                        CreateForm={Create}\n                        headers={headers}\n                        elementContent={(item, index) => {\n\n                            // swipe\n                            return <React.Fragment>\n                                <CardMedia\n                                    className={classes.media}\n                                    image={item.img1}\n                                    title=\"Paella\"\n                                />\n                            </React.Fragment>\n\n                            // grid\n                            return <React.Fragment>\n                                <CardHeader\n                                    avatar={<Avatar src={item.usename}></Avatar>}\n                                    action={''}\n                                    title={item.username}\n                                    subheader=\"\"\n                                />\n                                <CardMedia\n                                    component=\"img\"\n                                    alt=\"\"\n                                    height=\"200\"\n                                    image={item.username}\n                                    title=\"\"\n                                />\n                            </React.Fragment>\n                            \n\n                            // list\n                            return <React.Fragment>\n                                <ListItemAvatar>\n                                    <Avatar alt='' src={item.picture} />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={item.username}\n                                    secondary={item.email} />\n                            </React.Fragment>\n                            \n\n                            // table\n                            return <React.Fragment>\n                                <TableCell>\n                                    {item.username}\n                                </TableCell>\n                                <TableCell>\n                                    {item.email}\n                                </TableCell>\n                            </React.Fragment>\n                            \n\n                            // supertable\n                            return item;\n\n                            // raw\n                            return <React.Fragment>item</React.Fragment>;\n                        }}\n                        cardActions={(item, index) => null}\n                        cardCollapse={(item, index) => null}\n                        dialogName=''\n                        actionType='create' // create or create-default\n                        addButtonType='fab' // can be fab button inline none\n                        addButtonName={theme.props.components.Add}\n                        editButtonName={theme.props.components.Edit}\n                        deleteButtonName={theme.props.components.Delete}\n                        deleteButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                        editButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                    />\n    \n */\n\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n    Grid,\n    Button, Fab,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ViewItems from '../views/viewItems';\nimport { useHistory } from \"react-router-dom\";\nimport DialogFullScreen from '../views/dialogFullScreen';\nimport DialogPromt from '../views/dialogPromt';\nimport QueryItems from './queryItems';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(9),\n        right: theme.spacing(3),\n        zIndex: 1000,\n    },\n    pointer: {\n        cursor: 'pointer'\n    },\n}));\n\n\nexport default function CreateMany(props) {\n    const pathname = window.document.location.pathname;\n    const parent_url = '/' + pathname.split('/')[1];\n\n    const theme = useTheme();\n    const classes = useStyles();\n    const history = useHistory();\n    const [deleteDialog, setDeleteDialog] = React.useState(false);\n    const [openEdit, setOpenEdit] = React.useState(false);\n    const [openCreate, setOpenCreate] = React.useState(false);\n    const [currentItem, setCurrentItem] = React.useState({ id: 'new' });\n\n\n    const handleAddButton = () => {\n        if (props.actionType === 'create') {\n            setCurrentItem({ id: 'new' });\n            handleCreateDialogOpen();\n        } else {\n            handleCreate({ target: { value: { id: 'new' } } })\n        }\n    }\n    const handleEditDialogOpen = (item) => {\n        if (props.withUrl !== true) {\n            setCurrentItem(item);\n            setOpenEdit(true);\n        } else {\n            history.push(`/${props.name}/${item.id}`);\n        }\n    };\n    const handleEditDialogClose = () => {\n        if (props.withUrl === true) history.push(parent_url);\n        setOpenEdit(false);\n    };\n    const handleDeleteDialogOpen = (id) => {\n        setCurrentItem(id); setDeleteDialog(true);\n    };\n    const handleDeleteDialogClose = () => {\n        setDeleteDialog(false);\n    };\n    const handleCreateDialogOpen = () => { setOpenCreate(true); };\n    const handleCreateDialogClose = () => { setOpenCreate(false); };\n    const handleDelete = () => {\n        const ids = props.query_variables.ids.filter(i => i !== currentItem.id);\n        deleteMutation({\n            variables: { id: currentItem.id },\n            update: (proxy) => {\n            },\n            refetchQueries: props.withUrl ? [{ query: props.query_where, variables: props.query_variables }] : []\n        }).then(res => {\n            if (props.onChange !== undefined) props.onChange({ target: { id: props.name, value: ids } });\n        });\n        setDeleteDialog(false);\n    }\n    const handleUpdate = (e) => {\n        updateMutation({\n            variables: e.target.value\n        }).then(res => {\n        });\n    }\n    const handleCreate = (e) => {\n        let ids = props.query_variables.ids;\n        updateMutation({\n            variables: e.target.value,\n            update: (proxy, { data }) => {\n                const key = Object.keys(data)[0];\n                const newItem = data[key];\n                ids = ids.concat(newItem.id);\n            },\n            refetchQueries: props.withUrl ? [{ query: props.query_where, variables: props.query_variables }] : []\n        }).then(res => {\n            if (props.onChange !== undefined) props.onChange({ target: { id: props.name, value: ids } });\n        });\n        handleEditDialogClose();\n        handleCreateDialogClose();\n    }\n    React.useEffect(() => {\n        if (props.withUrl) {\n            const locationArr = pathname.split('/');\n            if (locationArr[1] === props.name) {\n                const id = locationArr[locationArr.length - 1];\n                if (id !== props.name) {\n                    setCurrentItem({ id: id });\n                    setOpenEdit(true);\n                } else {\n                    setOpenEdit(false);\n                    setOpenCreate(false);\n                }\n            }\n        }\n    }, [props.withUrl, pathname, props.name, setCurrentItem]);\n\n    const [deleteMutation] = useMutation(props.query_delete);\n    const [updateMutation] = useMutation(props.query_update);\n\n\n\n    return <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n        {props.addButtonType === 'fab' && <Fab\n            color=\"secondary\"\n            variant='extended'\n            aria-label=\"add\"\n            className={classes.fab}\n            onClick={handleAddButton}\n        ><AddIcon />{props.addButtonName !== undefined && props.addButtonName}</Fab>\n        }\n        {props.addButtonType === 'button' && <Grid item xs={12} sm={12} md={12} >\n            <Button\n                color=\"default\"\n                className={`add-${props.name}`}\n                fullWidth\n                variant=\"outlined\"\n                onClick={handleAddButton}\n            >\n                {props.addButtonName !== undefined ? props.addButtonName : 'add'}\n            </Button>\n        </Grid>\n        }\n\n        <QueryItems {...props} >\n            {\n                props => {\n\n                    let items = props.items;\n                    let item = currentItem;\n                    if (item !== 'new') {\n                        item = items.find(item => item.id === currentItem.id)\n                        if (!item) {\n                            item = { id: 'new' };\n                        }\n                    }\n\n                    return <React.Fragment>\n\n                        {props.addButtonType === 'inline' ?\n                            <Grid item xs={12} sm={12} md={12} >\n                                {\n                                    props.CreateForm({\n                                        addButtonName: props.addButtonName,\n                                        item: item,\n                                        afterSubmit: handleCreate\n                                    })\n                                }\n                            </Grid>\n                            :\n                            <DialogFullScreen\n                                isNew={true}\n                                open={openCreate}\n                                onClose={handleCreateDialogClose}\n                                dialogName={props.dialogName}\n                                content={\n                                    props.CreateForm({\n                                        addButtonName: props.addButtonName,\n                                        item: item,\n                                        afterSubmit: handleCreate\n                                    })}\n                            />\n\n                        }\n\n                        <DialogFullScreen\n                            isNew={false}\n                            open={openEdit}\n                            onClose={handleEditDialogClose}\n                            dialogName={props.dialogName}\n                            content={\n                                props.EditForm({\n                                    item: item,\n                                    afterSubmit: handleUpdate\n                                })\n                            }\n                        />\n\n                        <Grid item xs={12} sm={12} md={12} >\n                            <ViewItems\n                                name={props.name}\n                                viewType={props.viewType}\n                                items={items}\n                                headers={props.headers}\n                                superTableOptions={props.superTableOptions}\n                                editButton={props.editButton}\n                                deleteButton={props.deleteButton}\n                                elementContent={props.elementContent}\n                                cardActions={props.cardActions}\n                                cardCollapse={props.cardCollapse}\n                                editButtonName={props.editButtonName}\n                                deleteButtonName={props.deleteButtonName}\n                                handleEditDialogOpen={handleEditDialogOpen}\n                                handleDeleteDialogOpen={handleDeleteDialogOpen}\n                            />\n                        </Grid>\n                    </React.Fragment>\n                }\n            }\n        </QueryItems>\n        <DialogPromt\n            open={deleteDialog}\n            onClose={handleDeleteDialogClose}\n            dialogName={`${theme.props.components.Delete}?`}\n            onYes={handleDelete}\n            yes={theme.props.components.Yes}\n            no={theme.props.components.No}\n        />\n    </Grid>\n\n}","import gql from 'graphql-tag';\n\nexport const GETS = gql`\n  {\n    Users {\n      id\n      createdAt\n      updatedAt\n      email\n      username\n    }\n  }\n`;\n\nexport const UPDATE = gql`\n   mutation updateUser( $id: ID, $username: String, $email: String, $password: String) {\n    updateUser( id: $id, username: $username, email: $email, password : $password){\n      id\n      createdAt\n      updatedAt\n      email\n      username\n    }\n  }\n`;\n\nexport const DELETE = gql`\n  mutation deleteUser($id: ID!) {\n    deleteUser(id: $id)\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nexport const REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nconst model = 'user';\n\nconst FieldsSchema = Yup.object().shape({\n    username: Yup.string()\n        .min(2, 'Must be 2 characters or more!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    email: Yup.string()\n        .email('Invalid email address')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'Must be 6 characters or more!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n});\n\nexport default function Form({item, afterSubmit, children}) {\n\n    item = item.id !== 'new' ? item : { id: 'new', username: '', email: '', password: '' }\n    return <Formik\n        initialValues={{\n            id: item.id,\n            username: item.username,\n            email: item.email,\n            password: '',\n        }}\n        enableReinitialize={true}\n        validationSchema={FieldsSchema}\n        onSubmit={(values, actions) => {\n            actions.setSubmitting(false);\n            //actions.resetForm();\n            const e = { target: { id: model, value: values } };\n            afterSubmit(e);\n        }}\n    >\n        {props => children({ ...props })}\n    </Formik>;\n}","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { TextField, Grid, Container } from '@material-ui/core';\n\nexport default function EditView1(props) {\n    const theme = useTheme();\n\n    return <Container>\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={12} md={12} >\n                <TextField\n                    id=\"username\"\n                    name=\"username\"\n                    label={theme.props.models.user.Username}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    value={props.values.username}\n                    error={props.errors.username && props.touched.username ? true : false}\n                    helperText={props.errors.username && props.touched.username ? props.errors.username : null}\n                    onBlur={e => { props.handleChange(e); props.submitForm(); }}\n                    onChange={props.handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} >\n                <TextField\n                    id=\"email\"\n                    name=\"email\"\n                    label={theme.props.models.user.Email}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    value={props.values.email}\n                    error={props.errors.email && props.touched.email ? true : false}\n                    helperText={props.errors.email && props.touched.email ? props.errors.email : null}\n                    onBlur={e => { props.handleChange(e); props.submitForm(); }}\n                    onChange={props.handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} >\n                <TextField\n                    id=\"password\"\n                    name=\"password\"\n                    label={theme.props.models.user.Password}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    type=\"password\"\n                    value={props.values.password}\n                    error={props.errors.password && props.touched.password ? true : false}\n                    helperText={props.errors.password && props.touched.password ? props.errors.password : null}\n                    onBlur={e => { props.handleChange(e); props.submitForm(); } }\n                    onChange={props.handleChange}\n                />\n            </Grid>\n        </Grid>\n    </Container>\n}","import React from 'react';\nimport ViewSet from '../../components/views/viewSet';\nimport Form from './_form';\nimport Fields1 from './_fields1'\n\n\nexport default function Edit({item, afterSubmit}) {\n    return <Form item={item} afterSubmit={afterSubmit}>\n        {props => <ViewSet\n            viewType='raw'\n            labels={['']}\n            tabs={[\n                <Fields1\n                    item={props.item}\n                    values={props.values}\n                    errors={props.errors}\n                    touched={props.touched}\n                    handleChange={props.handleChange}\n                    onDelete={props.onDelete}\n                    submitForm={props.submitForm}\n                />\n            ]}\n        />\n        }\n    </Form>\n}","import React from 'react';\nimport { Container, Grid, Button } from '@material-ui/core';\nimport ViewSet from '../../components/views/viewSet';\nimport Fields1 from './_fields1';\nimport Form from './_form';\n\nexport default function Create({ addButtonName, item, afterSubmit }) {\n    return <Form item={item} afterSubmit={afterSubmit}>\n        {\n            props => {\n                return <ViewSet\n                    viewType='raw'\n                    labels={['']}\n                    tabs={[\n                        <React.Fragment>\n                            <Fields1\n                                item={props.item}\n                                values={props.values}\n                                errors={props.errors}\n                                touched={props.touched}\n                                handleChange={props.handleChange}\n                                submitForm={() => { }}\n                            />\n                            <Container>\n                                <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n                                    <Grid item xs={12} sm={12} md={12} >\n                                        <Button\n                                            className='save-button'\n                                            fullWidth\n                                            onClick={() => { props.submitForm(); }}\n                                            disabled={props.isSubmitting}\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                        >{addButtonName}</Button>\n                                    </Grid>\n                                </Grid>\n                            </Container>\n                        </React.Fragment>\n                    ]}\n                />;\n            }\n        }\n    </Form>\n}","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\n////g-key import components\nimport ViewSet from '../../components/views/viewSet';\nimport CreateMany from '../../components/hasMany/createMany';\n////g-key import queries\nimport { GETS, UPDATE, DELETE } from '../../queries/users.js';\n////g-key import helpers\nimport Edit from './edit';\nimport Create from './create';\n\nconst models = 'users';\n\nconst superTableOptions = {\n    filter: true,\n    filterType: \"checkbox\",\n    selectableRows: 'none',\n    fixedHeader: true,\n    responsive: 'simple',\n    rowsPerPageOptions: [10, 50, 100, 1000],\n    rowsPerPage: 50,\n\n};\n\nexport default function All() {\n    const theme = useTheme();\n\n    const headers = [\n        {\n            name: \"id\",\n            label: theme.props.models.user.Id,\n            options: {\n                filter: false,\n                sort: false,\n                sortThirdClickReset: true,\n                sortDescFirst: false,\n            }\n        },\n        {\n            name: \"username\",\n            label: theme.props.models.user.Username,\n            options: {\n                filter: true,\n                sort: false,\n                sortThirdClickReset: true,\n                sortDescFirst: false,\n            }\n        },\n        {\n            name: \"email\",\n            label: theme.props.models.user.Email,\n            options: {\n                filter: true,\n                sort: false,\n                sortThirdClickReset: true,\n                sortDescFirst: false,\n            }\n        },\n    ]\n\n    return <ViewSet\n        viewType='raw' // can be - tabs plan wizard or button\n        labels={['']}\n        tabs={[\n            <Container>\n                <CreateMany\n                    name={models}\n                    viewType='supertable' // can be grid list table supertable raw\n                    superTableOptions={superTableOptions}\n                    query_where={GETS}\n                    query_variables={{ ids: [] }}\n                    query_update={UPDATE}\n                    query_delete={DELETE}\n                    onChange={(e) => { }}\n                    withUrl={true} // use url\n                    EditForm={(Edit)}\n                    CreateForm={Create}\n                    headers={headers}\n                    elementContent={(item, index) => {\n\n                        // grid\n                        /*return <React.Fragment>\n                            <CardHeader\n                                avatar={<Avatar src={item.usename}></Avatar>}\n                                action={''}\n                                title={item.username}\n                                subheader=\"\"\n                            />\n                            <CardMedia\n                                component=\"img\"\n                                alt=\"\"\n                                height=\"200\"\n                                image={item.username}\n                                title=\"\"\n                            />\n                        </React.Fragment>\n                        */\n\n                        // list\n                        /*return <React.Fragment>\n                            <ListItemAvatar>\n                                <Avatar alt='' src={item.picture} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={item.username}\n                                secondary={item.email} />\n                        </React.Fragment>\n                        */\n\n                        // table\n                        /*return <React.Fragment>\n                            <TableCell>\n                                {item.username}\n                            </TableCell>\n                            <TableCell>\n                                {item.email}\n                            </TableCell>\n                        </React.Fragment>\n                        */\n\n                        // supertable\n                        return item;\n\n                        // raw\n                        //return <React.Fragment>item</React.Fragment>;\n                    }}\n                    cardActions={(item, index) => null}\n                    dialogName=''\n                    actionType='create' // create or create-default\n                    addButtonType='fab' // can be fab button inline none\n                    addButtonName={theme.props.components.Add}\n                    editButtonName={theme.props.components.Edit}\n                    deleteButtonName={theme.props.components.Delete}\n                    deleteButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                    editButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                />\n            </Container>\n        ]}\n    />;\n\n}","import React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useSnackbar } from 'notistack';\nimport {\n    Container,\n    Button,\n    TextField,\n    Typography,\n    LinearProgress,\n    CssBaseline,\n    Grid\n} from '@material-ui/core';\nimport * as Yup from 'yup';\nimport { LOGIN_USER } from '../../queries/users'\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from '../../auth';\n\nconst SignupSchema = Yup.object().shape({\n    username: Yup.string()\n        .min(2, 'Must be 2 characters or more!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n    password: Yup.string()\n        .min(6, 'Must be 6 characters or more!')\n        .max(50, 'Too Long!')\n        .required('Required'),\n});\n\nfunction SignInDialog(props) {\n\n    const context = useContext(AuthContext);\n    const theme = useTheme();\n    const { enqueueSnackbar } = useSnackbar();\n\n\n\n    const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n        update(_, { data: { login: userData } }) {\n            context.login(userData);\n            props.onChange && props.onChange(context);\n        },\n        onError(error) {\n            console.log(error);\n            enqueueSnackbar(theme.props.profile.UserNotFound, {variant: 'warning'});\n        }\n    });\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" >\n                <CssBaseline />\n                <Formik\n                    initialValues={{ username: '', password: '' }}\n                    validationSchema={SignupSchema}\n                    onSubmit={(values, actions) => {\n                        loginUser({ variables: values });\n                        actions.setSubmitting(false);\n                    }}\n                >\n                    {props => {\n\n                        return <form onSubmit={props.handleSubmit}>\n                            <Grid container spacing={2} >\n                                <Grid item xs={12}></Grid>\n                                <Grid item xs={12}>\n                                    <Typography component=\"h1\" variant=\"h5\" id='signinheader'>{theme.props.profile.SignInHeader}</Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        label={theme.props.models.user.Username}\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"username\"\n                                        name=\"username\"\n                                        autoComplete=\"username\"\n                                        autoFocus\n                                        value={props.values.username}\n                                        error={props.errors.username && props.touched.username ? true : false}\n                                        helperText={props.errors.username && props.touched.username ? props.errors.username : null}\n                                        onBlur={props.handleBlur}\n                                        onChange={props.handleChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        name=\"password\"\n                                        label={theme.props.models.user.Password}\n                                        type=\"password\"\n                                        id=\"password\"\n                                        autoComplete=\"current-password\"\n                                        value={props.values.password}\n                                        error={props.errors.password && props.touched.password ? true : false}\n                                        helperText={props.errors.password && props.touched.password ? props.errors.password : null}\n                                        onBlur={props.handleBlur}\n                                        onChange={props.handleChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button type=\"submit\" fullWidth id=\"signin\" variant=\"contained\" color=\"primary\">{theme.props.profile.SignIn}</Button>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    {loading && <LinearProgress />}\n                                </Grid>\n                            </Grid>\n                        </form>\n                    }}\n                </Formik>\n            </Container>\n    );\n}\nexport default SignInDialog;","import React, { useContext } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useSnackbar } from 'notistack';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Container,\n  Button,\n  TextField,\n  Typography,\n  LinearProgress,\n  CssBaseline,\n  Grid,\n} from '@material-ui/core';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REGISTER_USER } from '../../queries/users'\nimport { AuthContext } from '../../auth';\n\n\n\nconst SignupSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(2, 'Must be 2 characters or more!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Required'),\n  password: Yup.string()\n    .min(6, 'Must be 6 characters or more!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n});\n\nfunction SignUpDialog(props) {\n\n  const context = useContext(AuthContext);\n  const theme = useTheme();\n  const { enqueueSnackbar } = useSnackbar();\n\n\n  const [regUser, { loading }] = useMutation(REGISTER_USER, {\n    update(\n      _,\n      {\n        data: { register: userData }\n      }\n    ) {\n      context.login(userData);\n      props.onChange && props.onChange(context);\n    },\n    onError(error) {\n      console.log(error);\n      enqueueSnackbar(error.graphQLErrors[0].message, {variant: 'warning'});\n    }\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" >\n      <CssBaseline />\n      <Formik\n        initialValues={{ username: '', email: '', admin: 'false', password: '', confirmPassword: '' }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {\n          regUser({ variables: values });\n          actions.setSubmitting(false);\n        }}\n      >\n        {props => (\n          <form onSubmit={props.handleSubmit}>\n            <Grid container spacing={2} >\n              <Grid item xs={12}></Grid>\n              <Grid item xs={12}>\n                <Typography component=\"h1\" variant=\"h5\" id='signupheader'>{theme.props.profile.SignUpHeader}</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label={theme.props.models.user.Username}\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  value={props.values.username}\n                  error={props.errors.username && props.touched.username ? true : false}\n                  helperText={props.errors.username && props.touched.username ? props.errors.username : null}\n                  onBlur={props.handleBlur}\n                  onChange={props.handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label={theme.props.models.user.Email}\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={props.values.email}\n                  error={props.errors.email && props.touched.email ? true : false}\n                  helperText={props.errors.email && props.touched.email ? props.errors.email : null}\n                  onBlur={props.handleBlur}\n                  onChange={props.handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label={theme.props.models.user.Password}\n                  type=\"password\"\n                  id=\"password\"\n                  value={props.values.password}\n                  error={props.errors.password && props.touched.password ? true : false}\n                  helperText={props.errors.password && props.touched.password ? props.errors.password : null}\n                  onBlur={props.handleBlur}\n                  onChange={props.handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"confirmPassword\"\n                  label={theme.props.profile.ConfirmPassword}\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  value={props.values.confirmPassword}\n                  error={props.errors.confirmPassword && props.touched.confirmPassword ? true : false}\n                  helperText={props.errors.confirmPassword && props.touched.confirmPassword ? props.errors.confirmPassword : null}\n                  onBlur={props.handleBlur}\n                  onChange={props.handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button type=\"submit\" id='signup' fullWidth variant=\"contained\" color=\"primary\">\n                  {theme.props.profile.SignUp}\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                {loading && <LinearProgress />}\n              </Grid>\n            </Grid>\n          </form>\n        )}\n      </Formik>\n    </Container>\n  );\n}\nexport default SignUpDialog;","/*\n<AuthArea\n    publicArea={\n        <div>1</div>\n    }\n    privateArea={\n        <div>2</div>}\n/>\n*/\nimport React from 'react';\nimport { useContext } from 'react';\nimport { AuthContext } from '../auth';\nimport {\n    Button, Dialog, AppBar, Toolbar, IconButton\n} from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport SignInDialog from '../pages/users/signinDialog';\nimport SignUpDialog from '../pages/users/signupDialog';\n\n\nexport const AuthArea = ({ publicArea, privateArea }) => {\n    const [view, setView] = React.useState(false);\n    const [reg, setReg] = React.useState(false);\n    const { user } = useContext(AuthContext);\n    return user ?\n        privateArea\n        :\n        <React.Fragment>\n            <label onClick={(e) => { e.preventDefault(); setView(true) }} >\n                {publicArea}\n            </label>\n            <Dialog fullScreen open={view}>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton edge=\"start\" aria-label=\"back\" color=\"inherit\" onClick={() => setView(false)}>\n                            <ArrowBack />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                {reg ?\n                    <React.Fragment>\n                        <SignUpDialog onChange={() => { setView(false); setReg(false) }} />\n                        <Button onClick={() => setReg(false)}>Войти</Button>\n                    </React.Fragment>\n                    :\n                    <React.Fragment>\n                        <SignInDialog onChange={() => { setView(false); setReg(false) }} />\n                        <Button onClick={() => setReg(true)}>Зарегистрироваться</Button>\n                    </React.Fragment>\n                }\n            </Dialog>\n        </React.Fragment>\n}","import React, { useContext } from 'react';\nimport { AuthContext } from '../../auth';\nimport { Button, Container, Typography, Grid, Avatar } from '@material-ui/core';\nimport { AuthArea } from '../../components/authArea';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nconst Profile = ({ component: Component, ...rest }) => {\n    const { user, logout } = useContext(AuthContext);\n    const theme = useTheme();\n\n    return <Container>\n        <br />\n        <br />\n        <AuthArea\n            publicArea={\n                <Button fullWidth variant='contained' color=\"primary\" aria-label={theme.props.profile.SignIn} id='signin'>{theme.props.profile.SignIn}</Button>\n            }\n            privateArea={<Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={12} sm={12} md={12}>\n                    <Avatar/>\n                </Grid>\n                <br />\n                <Grid item xs={12} sm={12} md={12}>\n                    <Typography gutterBottom >{user && user.username}</Typography>\n                </Grid>\n                <Grid item xs={12} sm={12} md={12}>\n                    <Typography gutterBottom >{user && user.email}</Typography>\n                </Grid>\n                <br />                \n                <Grid item xs={12} sm={12} md={12}>\n                    <Button color=\"primary\" fullWidth variant='contained' onClick={logout} id='signout'>{theme.props.profile.SignOut}</Button>\n                </Grid>\n\n            </Grid>\n            }\n        />\n        <br />\n        <br />\n    </Container>\n}\n\nexport default Profile;\n","import gql from 'graphql-tag';\n\nconst MODEL = 'Comment';\n\nconst FIELDS = [['like {owner value}', '[Estimate]'], ['text', 'String'], ];\nconst FIELDS_MUTATION = FIELDS.map(f => [\n    f[0].replace(' {type coordinates}', '').replace(' {owner value}', ''),\n    f[1]\n]);\n\n// Standard queries\nconst FRAGMENT_FIELDS = gql`\nfragment commentFields on Comment {\n    id ${FIELDS.map( f => f[0]).join(' ')} createdAt updatedAt\n}\n`;\nexport const GETS = gql` {\n    ${MODEL}s { ...commentFields }\n}\n${FRAGMENT_FIELDS}\n`;\nexport const GETS_WHERE = gql`\nquery($ids: [ID]) {\n    ${MODEL}sWhere (ids: $ids) { ...commentFields }\n}\n${FRAGMENT_FIELDS}\n`;\nexport const UPDATE = gql`\nmutation update${MODEL}($id: ID, ${FIELDS_MUTATION.map( f => `$${f[0]}: ${f[1]}`).join(', ')}) {\n    update${MODEL}(input:{id: $id, ${FIELDS_MUTATION.map( f => `${f[0]}: $${f[0]}`).join(', ')}}){ ...commentFields }\n}\n${FRAGMENT_FIELDS}\n`;\nexport const DELETE = gql`\nmutation delete${MODEL}($id: ID!) {\n    delete${MODEL}(id: $id)\n}\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nconst model = 'comment';\n\nconst FieldsSchema = Yup.object().shape({\n    \n    text: Yup.string()\n        .min(2, 'Must be 2 characters or more!')\n        .max(350, 'Too Long!')\n        .required('Required'),\n    \n});\n\nexport default function Form({item, afterSubmit, children}) {\n\n    item = item.id !== 'new' ? item : { like: { owner: '', value: 0 }, id: 'new', text: '',  }\n    \n    // items gen\n\tif(Array.isArray(item.like)) item.like.forEach(f => delete f.__typename);\n\n    return <Formik\n        initialValues={item}\n        enableReinitialize={true}\n        validationSchema={FieldsSchema}\n        onSubmit={(values, actions) => {\n            actions.setSubmitting(false);\n            //actions.resetForm();\n            const e = { target: { id: model, value: values } };\n            afterSubmit(e);\n        }}\n    >\n        {props => children({ ...props })}\n    </Formik>;\n}","\nimport React from 'react';\nimport { TextField, Grid, Container } from '@material-ui/core';\n//import { useTheme } from '@material-ui/core/styles';\n\nexport default function EditView1(props) {\n    // const theme = useTheme();\n    return <Container>\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={12} md={12} >\n                <TextField\n                    name=\"text\"\n                    label=\"text\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    value={props.values.text}\n                    error={props.errors.text && props.touched.text ? true : false}\n                    helperText={props.errors.text && props.touched.text ? props.errors.text : null}\n                    onBlur={e => { props.handleChange(e); props.submitForm(); }}\n                    onChange={props.handleChange}\n                />\n            </Grid>\n            \n        </Grid>\n    </Container>\n}","import React from 'react';\nimport ViewSet from '../../components/views/viewSet';\nimport Form from './_form';\nimport Fields1 from './_fields1'\n\nexport default function Edit({item, afterSubmit}) {\n    return <Form item={item} afterSubmit={afterSubmit}>\n        {props => <ViewSet\n            viewType='plan'\n            labels={['']}\n            tabs={[\n                <Fields1\n                    item={props.item}\n                    values={props.values}\n                    errors={props.errors}\n                    touched={props.touched}\n                    handleChange={props.handleChange}\n                    onDelete={props.onDelete}\n                    submitForm={props.submitForm}\n                />\n            ]}\n        />\n        }\n    </Form>\n}","import React from 'react';\nimport { Container, Grid, Button } from '@material-ui/core';\nimport ViewSet from '../../components/views/viewSet';\nimport Form from './_form';\nimport Fields1 from './_fields1';\n\nexport default function Create({ addButtonName, item, afterSubmit }) {\n    return <Form item={item} afterSubmit={afterSubmit}>\n        {\n            props => {\n                return <ViewSet\n                    viewType='raw'\n                    labels={['']}\n                    tabs={[\n                        <React.Fragment>\n                            <Fields1\n                                item={props.item}\n                                values={props.values}\n                                errors={props.errors}\n                                touched={props.touched}\n                                handleChange={props.handleChange}\n                                submitForm={props.submitForm}\n                            />\n                            <Container>\n                                <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n                                    <Grid item xs={12} sm={12} md={12} >\n                                        <Button\n                                            className='save-button'\n                                            fullWidth\n                                            onClick={() => { props.submitForm(); }}\n                                            disabled={props.isSubmitting}\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                        >{addButtonName}</Button>\n                                    </Grid>\n                                </Grid>\n                            </Container>\n                        </React.Fragment>\n                    ]}\n                />\n            }\n        }\n    </Form>\n}","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\n////g-key import components\nimport ViewSet from '../../components/views/viewSet';\nimport CreateMany from '../../components/hasMany/createMany';\n////g-key import queries\nimport { GETS, UPDATE, DELETE } from '../../queries/comments.js';\n////g-key import helpers\nimport Edit from './edit';\nimport Create from './create';\n\nconst models = 'comments';\n\nconst superTableOptions = {\n    filter: true,\n    filterType: \"checkbox\",\n    selectableRows: 'none',\n    fixedHeader: true,\n    responsive: 'simple',\n    rowsPerPageOptions: [10, 50, 100, 1000],\n    rowsPerPage: 50,\n\n};\n\nexport default function All() {\n    const theme = useTheme();\n\n    const headers = [\n        {\n            name: \"id\",\n            label: theme.props.models.user.Id,\n            options: {\n                filter: false,\n                sort: false,\n                sortThirdClickReset: true,\n                sortDescFirst: false,\n            }\n        },\n        {\n            name: 'text',\n            label: theme.props.models.comment.text,\n            options: {\n                filter: true,\n                sort: false,\n                sortThirdClickReset: true,\n                sortDescFirst: false,\n            }\n        },\n        \n    ]\n\n    return <ViewSet\n        viewType='raw' // can be - tabs tabsmain plan wizard or button\n        labels={[models]}\n        tabs={[\n            <Container>\n                <CreateMany\n                    name={models}\n                    viewType='supertable' // can be grid list table supertable raw\n                    superTableOptions={superTableOptions}\n                    query_where={GETS}\n                    query_variables={{ ids: [] }}\n                    query_update={UPDATE}\n                    query_delete={DELETE}\n                    onChange={(e) => { }}\n                    withUrl={true} // use url\n                    EditForm={(Edit)}\n                    CreateForm={Create}\n                    headers={headers}\n                    elementContent={(item, index) => {\n\n                        // grid\n                        /*return <React.Fragment>\n                            <CardHeader\n                                avatar={<Avatar src={item.usename}></Avatar>}\n                                action={''}\n                                title={item.username}\n                                subheader=\"\"\n                            />\n                            <CardMedia\n                                component=\"img\"\n                                alt=\"\"\n                                height=\"200\"\n                                image={item.username}\n                                title=\"\"\n                            />\n                        </React.Fragment>\n                        */\n\n                        // list\n                        /*return <React.Fragment>\n                            <ListItemAvatar>\n                                <Avatar alt='' src={item.picture} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={item.username}\n                                secondary={item.email} />\n                        </React.Fragment>\n                        */\n\n                        // table\n                        /*return <React.Fragment>\n                            <TableCell>\n                                {item.username}\n                            </TableCell>\n                            <TableCell>\n                                {item.email}\n                            </TableCell>\n                        </React.Fragment>\n                        */\n\n                        // supertable\n                        return item;\n\n                        // raw\n                        //return <React.Fragment>item</React.Fragment>;\n                    }}\n                    cardActions={(item, index) => null}\n                    dialogName=''\n                    actionType='create' // create or create-default\n                    addButtonType='fab' // can be fab button inline none\n                    addButtonName={theme.props.components.Add}\n                    editButtonName={theme.props.components.Edit}\n                    deleteButtonName={theme.props.components.Delete}\n                    deleteButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                    editButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                />\n            </Container>\n        ]}\n    />;\n\n}","import gql from 'graphql-tag';\n\nconst MODEL = 'Room';\n\nconst FIELDS = [['comments', '[ID]'], ['name', 'String'], ['cover', 'String'], ];\nconst FIELDS_MUTATION = FIELDS.map(f => [\n    f[0].replace(' {type coordinates}', '').replace(' {owner value}', ''),\n    f[1]\n]);\n\n// Standard queries\nconst FRAGMENT_FIELDS = gql`\nfragment roomFields on Room {\n    id ${FIELDS.map( f => f[0]).join(' ')} createdAt updatedAt\n}\n`;\nexport const GETS = gql` {\n    ${MODEL}s { ...roomFields }\n}\n${FRAGMENT_FIELDS}\n`;\nexport const GETS_WHERE = gql`\nquery($ids: [ID]) {\n    ${MODEL}sWhere (ids: $ids) { ...roomFields }\n}\n${FRAGMENT_FIELDS}\n`;\nexport const UPDATE = gql`\nmutation update${MODEL}($id: ID, ${FIELDS_MUTATION.map( f => `$${f[0]}: ${f[1]}`).join(', ')}) {\n    update${MODEL}(input:{id: $id, ${FIELDS_MUTATION.map( f => `${f[0]}: $${f[0]}`).join(', ')}}){ ...roomFields }\n}\n${FRAGMENT_FIELDS}\n`;\nexport const DELETE = gql`\nmutation delete${MODEL}($id: ID!) {\n    delete${MODEL}(id: $id)\n}\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nconst model = 'room';\n\nconst FieldsSchema = Yup.object().shape({\n    \n    name: Yup.string()\n        .min(2, 'Must be 2 characters or more!')\n        .max(350, 'Too Long!')\n        .required('Required'),\n    \n    cover: Yup.string()\n        .min(2, 'Must be 2 characters or more!')\n        .max(350, 'Too Long!')\n        .required('Required'),\n    \n});\n\nexport default function Form({item, afterSubmit, children}) {\n\n    item = item.id !== 'new' ? item : { comments: [], id: 'new', name: '', cover: '',  }\n    \n    // items gen\n\n    return <Formik\n        initialValues={item}\n        enableReinitialize={true}\n        validationSchema={FieldsSchema}\n        onSubmit={(values, actions) => {\n            actions.setSubmitting(false);\n            //actions.resetForm();\n            const e = { target: { id: model, value: values } };\n            afterSubmit(e);\n        }}\n    >\n        {props => children({ ...props })}\n    </Formik>;\n}","\nimport React from 'react';\nimport { TextField, Grid, Container, ListItemText } from '@material-ui/core';\nimport CreateMany from '../../components/hasMany/createMany';\nimport { useTheme } from '@material-ui/core/styles';\nimport { GETS_WHERE, UPDATE, DELETE } from '../../queries/comments.js';\nimport Edit from '../comments/edit';\nimport Create from '../comments/create';\n\nexport default function EditView1(props) {\n    const theme = useTheme();\n\n    return <Container>\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={12} md={12} >\n                <TextField\n                    name=\"name\"\n                    label=\"name\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    value={props.values.name}\n                    error={props.errors.name && props.touched.name ? true : false}\n                    helperText={props.errors.name && props.touched.name ? props.errors.name : null}\n                    onBlur={e => { props.handleChange(e); props.submitForm(); }}\n                    onChange={props.handleChange}\n                />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} >\n                <CreateMany\n                    name={'comments'}\n                    viewType='list' // can be grid list table supertable swipe raw\n                    superTableOptions={{}}\n                    query_where={GETS_WHERE}\n                    query_variables={{ ids: props.values.comments }}\n                    query_update={UPDATE}\n                    query_delete={DELETE}\n                    onChange={e => { props.handleChange(e); props.submitForm(); }}\n                    withUrl={false} // use url\n                    EditForm={(Edit)}\n                    CreateForm={Create}\n                    headers={{}}\n                    elementContent={(item, index) => {\n\n                        // list\n                        return <React.Fragment>\n                            <ListItemText\n                                primary={item.text}\n                                secondary={item.text} />\n                        </React.Fragment>\n\n                    }}\n                    cardActions={(item, index) => null}\n                    cardCollapse={(item, index) => null}\n                    dialogName=''\n                    actionType='create' // create or create-default\n                    addButtonType='button' // can be fab button inline none\n                    addButtonName={theme.props.components.Add}\n                    editButtonName={theme.props.components.Edit}\n                    deleteButtonName={theme.props.components.Delete}\n                    deleteButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                    editButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12} >\n                <TextField\n                    name=\"cover\"\n                    label=\"cover\"\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    value={props.values.cover}\n                    error={props.errors.cover && props.touched.cover ? true : false}\n                    helperText={props.errors.cover && props.touched.cover ? props.errors.cover : null}\n                    onBlur={e => { props.handleChange(e); props.submitForm(); }}\n                    onChange={props.handleChange}\n                />\n            </Grid>\n\n        </Grid>\n    </Container>\n}","import React from 'react';\nimport ViewSet from '../../components/views/viewSet';\nimport Form from './_form';\nimport Fields1 from './_fields1'\n\nexport default function Edit({item, afterSubmit}) {\n    return <Form item={item} afterSubmit={afterSubmit}>\n        {props => <ViewSet\n            viewType='plan'\n            labels={['']}\n            tabs={[\n                <Fields1\n                    item={props.item}\n                    values={props.values}\n                    errors={props.errors}\n                    touched={props.touched}\n                    handleChange={props.handleChange}\n                    onDelete={props.onDelete}\n                    submitForm={props.submitForm}\n                />\n            ]}\n        />\n        }\n    </Form>\n}","import React from 'react';\nimport { Container, Grid, Button } from '@material-ui/core';\nimport ViewSet from '../../components/views/viewSet';\nimport Form from './_form';\nimport Fields1 from './_fields1';\n\nexport default function Create({ addButtonName, item, afterSubmit }) {\n    return <Form item={item} afterSubmit={afterSubmit}>\n        {\n            props => {\n                return <ViewSet\n                    viewType='raw'\n                    labels={['']}\n                    tabs={[\n                        <React.Fragment>\n                            <Fields1\n                                item={props.item}\n                                values={props.values}\n                                errors={props.errors}\n                                touched={props.touched}\n                                handleChange={props.handleChange}\n                                submitForm={() => { }}\n                            />\n                            <Container>\n                                <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n                                    <Grid item xs={12} sm={12} md={12} >\n                                        <Button\n                                            className='save-button'\n                                            fullWidth\n                                            onClick={() => { props.submitForm(); }}\n                                            disabled={props.isSubmitting}\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                        >{addButtonName}</Button>\n                                    </Grid>\n                                </Grid>\n                            </Container>\n                        </React.Fragment>\n                    ]}\n                />\n            }\n        }\n    </Form>\n}","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Container } from '@material-ui/core';\n////g-key import components\nimport ViewSet from '../../components/views/viewSet';\nimport CreateMany from '../../components/hasMany/createMany';\n////g-key import queries\nimport { GETS, UPDATE, DELETE } from '../../queries/rooms.js';\n////g-key import helpers\nimport Edit from './edit';\nimport Create from './create';\n\nconst models = 'rooms';\n\nconst superTableOptions = {\n    filter: true,\n    filterType: \"checkbox\",\n    selectableRows: 'none',\n    fixedHeader: true,\n    responsive: 'simple',\n    rowsPerPageOptions: [10, 50, 100, 1000],\n    rowsPerPage: 50,\n\n};\n\nexport default function All() {\n    const theme = useTheme();\n\n    const headers = [\n        {\n            name: \"id\",\n            label: theme.props.models.user.Id,\n            options: {\n                filter: false,\n                sort: false,\n                sortThirdClickReset: true,\n                sortDescFirst: false,\n            }\n        },\n        {\n            name: 'name',\n            label: theme.props.models.room.name,\n            options: {\n                filter: true,\n                sort: false,\n                sortThirdClickReset: true,\n                sortDescFirst: false,\n            }\n        },\n        {\n            name: 'cover',\n            label: theme.props.models.room.cover,\n            options: {\n                filter: true,\n                sort: false,\n                sortThirdClickReset: true,\n                sortDescFirst: false,\n            }\n        },\n        \n    ]\n\n    return <ViewSet\n        viewType='raw' // can be - tabs tabsmain plan wizard or button\n        labels={['']}\n        tabs={[\n            <Container>\n                <CreateMany\n                    name={models}\n                    viewType='supertable' // can be grid list table supertable raw\n                    superTableOptions={superTableOptions}\n                    query_where={GETS}\n                    query_variables={{ ids: [] }}\n                    query_update={UPDATE}\n                    query_delete={DELETE}\n                    onChange={(e) => { }}\n                    withUrl={true} // use url\n                    EditForm={(Edit)}\n                    CreateForm={Create}\n                    headers={headers}\n                    elementContent={(item, index) => {\n\n                        // grid\n                        /*return <React.Fragment>\n                            <CardHeader\n                                avatar={<Avatar src={item.usename}></Avatar>}\n                                action={''}\n                                title={item.username}\n                                subheader=\"\"\n                            />\n                            <CardMedia\n                                component=\"img\"\n                                alt=\"\"\n                                height=\"200\"\n                                image={item.username}\n                                title=\"\"\n                            />\n                        </React.Fragment>\n                        */\n\n                        // list\n                        /*return <React.Fragment>\n                            <ListItemAvatar>\n                                <Avatar alt='' src={item.picture} />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={item.username}\n                                secondary={item.email} />\n                        </React.Fragment>\n                        */\n\n                        // table\n                        /*return <React.Fragment>\n                            <TableCell>\n                                {item.username}\n                            </TableCell>\n                            <TableCell>\n                                {item.email}\n                            </TableCell>\n                        </React.Fragment>\n                        */\n\n                        // supertable\n                        return item;\n\n                        // raw\n                        //return <React.Fragment>item</React.Fragment>;\n                    }}\n                    cardActions={(item, index) => null}\n                    dialogName=''\n                    actionType='create' // create or create-default\n                    addButtonType='fab' // can be fab button inline none\n                    addButtonName={theme.props.components.Add}\n                    editButtonName={theme.props.components.Edit}\n                    deleteButtonName={theme.props.components.Delete}\n                    deleteButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                    editButton={(item, i) => 'each'} // can be 'each', 'last', 'none'\n                />\n            </Container>\n        ]}\n    />;\n\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { AuthProvider } from './auth';\nimport { SnackbarProvider } from 'notistack';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport pink from '@material-ui/core/colors/pink';\nimport blue from '@material-ui/core/colors/blue';\nimport Menu from './layouts/Menu';\nimport Footer from './layouts/Footer';\nimport ruRU from './locale/ru';\nimport PrivateMainLayout from './layouts/PrivateMainLayout';\nimport PublicMainLayout from './layouts/PublicMainLayout';\nimport { Users, Profile } from './pages/users';\n//top for generator\nimport { Comments } from './pages/comments';\nimport { Rooms } from './pages/rooms';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n    type: 'dark',\n  },\n  // TODO to gen\n  overrides: {\n    MUIDataTable: {\n      paper: {\n        boxShadow: 'none',\n        border: '1px solid rgba(255, 255, 255, 0.12)'\n      },\n    },\n  },\n}, ruRU);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <SnackbarProvider maxSnack={3}>\n        <CssBaseline />\n        <AuthProvider>\n          <Router>\n            <React.Fragment>\n              <Route exact path=\"/:menu([\\D]*)\" component={Menu} />\n              <Route exact path=\"/\">\n                <Redirect to=\"/profile\" />\n              </Route>\n              {/*users*/}\n              <PrivateMainLayout path=\"/users\" component={Users} />\n              <PublicMainLayout exact path=\"/profile\" component={Profile} />\n              {/*list for generator*/}\n\t\t\t\t\t\t\t<PublicMainLayout path=\"/comments\" component={Comments} /> \n\t\t\t\t\t\t\t<PublicMainLayout path=\"/rooms\" component={Rooms} /> \n                            \n              {/*single for generator*/}\n\n              <Route exact path=\"/:menu([\\D]*)\" component={Footer} />\n\n            </React.Fragment>\n          </Router>\n        </AuthProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport App from './App';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createUploadLink } from'apollo-upload-client'\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { setContext } from 'apollo-link-context';\n\nconst httpLink = createUploadLink({ uri: process.env.REACT_APP_SERVER_ADDRESS });\n\nconst authLink = setContext(() => {\n  const token = localStorage.getItem('jwtToken');\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nexport default (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport ApolloProvider from './ApolloProvider';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}